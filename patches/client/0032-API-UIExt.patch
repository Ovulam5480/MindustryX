From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Sat, 2 Mar 2024 00:52:10 +0800
Subject: [PATCH] API: UIExt

---
 core/src/mindustryX/Hooks.java          |  1 +
 core/src/mindustryX/features/UIExt.java | 39 +++++++++++++++++++++++++
 2 files changed, 40 insertions(+)
 create mode 100644 core/src/mindustryX/features/UIExt.java

diff --git a/core/src/mindustryX/Hooks.java b/core/src/mindustryX/Hooks.java
index 5f15cc3b9f470523c214adfdd8d1f5f6e332cc55..7d38820522e521e55a4881da586aeffd36e46f60 100644
--- a/core/src/mindustryX/Hooks.java
+++ b/core/src/mindustryX/Hooks.java
@@ -15,6 +15,7 @@ public class Hooks implements ApplicationListener{
         if(!Vars.headless){
             RenderExt.init();
             TimeControl.init();
+            UIExt.init();
         }
     }
 
diff --git a/core/src/mindustryX/features/UIExt.java b/core/src/mindustryX/features/UIExt.java
new file mode 100644
index 0000000000000000000000000000000000000000..1d5ca9e1bd544ddd4b749036f68512e9833e8e67
--- /dev/null
+++ b/core/src/mindustryX/features/UIExt.java
@@ -0,0 +1,39 @@
+package mindustryX.features;
+
+import arc.math.geom.*;
+import arc.scene.ui.*;
+import arc.scene.ui.layout.*;
+import arc.util.*;
+import mindustry.content.*;
+
+import static mindustry.Vars.*;
+
+public class UIExt{
+    public static void init(){
+    }
+
+    public static void buildPositionRow(Table tt, Vec2 vec){
+        tt.add("x= ");
+        TextField x = tt.field(Strings.autoFixed(vec.x, 2), text -> {
+            vec.x = Float.parseFloat(text);
+        }).valid(Strings::canParseFloat).maxTextLength(8).get();
+
+        tt.add("y= ").marginLeft(32f);
+        TextField y = tt.field(Strings.autoFixed(vec.y, 2), text -> {
+            vec.y = Float.parseFloat(text);
+        }).valid(Strings::canParseFloat).maxTextLength(8).get();
+
+        tt.button(UnitTypes.gamma.emoji(), () -> {
+            vec.set(player.tileX(), player.tileY());
+            x.setText(String.valueOf(vec.x));
+            y.setText(String.valueOf(vec.y));
+        }).tooltip(b -> b.label(() -> "选择玩家当前位置：" + player.tileX() + "," + player.tileY())).height(50f);
+
+//            tt.button(StatusEffects.blasted.emoji(), () -> {
+//                if(Marker.markList.size == 0) return;
+//                vec.set(World.toTile(Marker.markList.peek().markPos.x), World.toTile(Marker.markList.peek().markPos.y));
+//                x.setText(World.toTile(Marker.markList.peek().markPos.x) + "");
+//                y.setText(World.toTile(Marker.markList.peek().markPos.y) + "");
+//            }).tooltip(Marker.markList.size == 0 ? "[red]未标记" : ("选择上个标记点：" + World.toTile(Marker.markList.peek().markPos.x) + "," + World.toTile(Marker.markList.peek().markPos.y))).height(50f);
+    }
+}

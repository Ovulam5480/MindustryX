From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Wed, 3 Apr 2024 21:25:13 +0800
Subject: [PATCH] =?UTF-8?q?FC:=20=E5=B0=8F=E5=9C=B0=E5=9B=BE=E5=A4=A7?=
 =?UTF-8?q?=E5=B0=8F=E5=8F=AF=E8=B0=83?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 core/src/mindustry/ui/Minimap.java | 32 +++++++++++++++++++++++++++---
 1 file changed, 29 insertions(+), 3 deletions(-)

diff --git a/core/src/mindustry/ui/Minimap.java b/core/src/mindustry/ui/Minimap.java
index ad828a8dd2394d2c9759e215ebc0d91945357409..adbc80fcd5cfb2b4e127603b1241b9c5b133e5e9 100644
--- a/core/src/mindustry/ui/Minimap.java
+++ b/core/src/mindustry/ui/Minimap.java
@@ -3,32 +3,58 @@ package mindustry.ui;
 import arc.*;
 import arc.graphics.g2d.*;
 import arc.input.*;
+import arc.math.*;
 import arc.scene.*;
 import arc.scene.event.*;
 import arc.scene.ui.layout.*;
+import arc.util.*;
 import mindustry.gen.*;
 
 import static mindustry.Vars.*;
 
 public class Minimap extends Table{
+    private final Cell<?> mapCell;
 
     public Minimap(){
         background(Tex.pane);
         float margin = 5f;
         this.touchable = Touchable.enabled;
 
-        add(new Element(){
+        mapCell = add(new Element(){
             {
-                setSize(Scl.scl(140f));
+                addListener(new ClickListener(KeyCode.mouseRight){
+                    @Override
+                    public void clicked(InputEvent event, float cx, float cy){
+                        var region = renderer.minimap.getRegion();
+                        if(region == null) return;
+
+                        float
+                        sx = (cx - x) / width,
+                        sy = (cy - y) / height,
+                        scaledX = Mathf.lerp(region.u, region.u2, sx) * world.width() * tilesize,
+                        scaledY = Mathf.lerp(1f - region.v2, 1f - region.v, sy) * world.height() * tilesize;
+
+                        control.input.panCamera(Tmp.v1.set(scaledX, scaledY));
+                    }
+                });
             }
 
             @Override
             public void act(float delta){
+                var size = Core.settings.getInt("minimapSize");
+                mapCell.size(size);
+                setSize(Scl.scl(size));
                 setPosition(Scl.scl(margin), Scl.scl(margin));
 
                 super.act(delta);
             }
 
+            @Override
+            protected void sizeChanged(){
+                super.sizeChanged();
+                mapCell.getTable().invalidate();
+            }
+
             @Override
             public void draw(){
                 if(renderer.minimap.getRegion() == null) return;
@@ -38,7 +64,7 @@ public class Minimap extends Table{
 
                 if(renderer.minimap.getTexture() != null){
                     Draw.alpha(parentAlpha);
-                    renderer.minimap.drawEntities(x, y, width, height, 0.75f, false);
+                    renderer.minimap.drawEntities(x, y, width, height, 3f / renderer.minimap.getZoom(), false);
                 }
 
                 clipEnd();

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Tue, 26 Mar 2024 19:22:00 +0800
Subject: [PATCH] API: RenderExt

---
 core/src/mindustry/core/Renderer.java         |  3 ++-
 .../src/mindustry/graphics/BlockRenderer.java |  3 ++-
 core/src/mindustryX/Hooks.java                |  5 ++++
 core/src/mindustryX/features/RenderExt.java   | 27 +++++++++++++++++++
 4 files changed, 36 insertions(+), 2 deletions(-)
 create mode 100644 core/src/mindustryX/features/RenderExt.java

diff --git a/core/src/mindustry/core/Renderer.java b/core/src/mindustry/core/Renderer.java
index 7769d3be7687ac8db960bef392a144410a1cc124..bab0738bca0a8b40d556bc3bfe36e6794f67c748 100644
--- a/core/src/mindustry/core/Renderer.java
+++ b/core/src/mindustry/core/Renderer.java
@@ -22,6 +22,7 @@ import mindustry.maps.*;
 import mindustry.type.*;
 import mindustry.world.blocks.storage.*;
 import mindustry.world.blocks.storage.CoreBlock.*;
+import mindustryX.features.*;
 
 import static arc.Core.*;
 import static mindustry.Vars.*;
@@ -379,7 +380,7 @@ public class Renderer implements ApplicationListener{
         Events.fire(Trigger.drawOver);
         blocks.drawBlocks();
 
-        Groups.draw.draw(Drawc::draw);
+        Groups.draw.draw(RenderExt::onGroupDraw);
 
         Draw.reset();
         Draw.flush();
diff --git a/core/src/mindustry/graphics/BlockRenderer.java b/core/src/mindustry/graphics/BlockRenderer.java
index aec39b666137666976321336b698e80177b05f84..5c57b1309660e500c38099d362b46a62846ac24c 100644
--- a/core/src/mindustry/graphics/BlockRenderer.java
+++ b/core/src/mindustry/graphics/BlockRenderer.java
@@ -18,6 +18,7 @@ import mindustry.gen.*;
 import mindustry.world.*;
 import mindustry.world.blocks.environment.Floor.*;
 import mindustry.world.blocks.power.*;
+import mindustryX.features.*;
 
 import static arc.Core.*;
 import static mindustry.Vars.*;
@@ -417,7 +418,7 @@ public class BlockRenderer{
 
             //comment wasVisible part for hiding?
             if(block != Blocks.air && (visible || build.wasVisible)){
-                block.drawBase(tile);
+                RenderExt.onBlockDraw(tile, block, build);
                 Draw.reset();
                 Draw.z(Layer.block);
 
diff --git a/core/src/mindustryX/Hooks.java b/core/src/mindustryX/Hooks.java
index ddb597d4389659c823a28f965434ed5be233215b..c399832fd28e50e3f6464380fca916cf5539d213 100644
--- a/core/src/mindustryX/Hooks.java
+++ b/core/src/mindustryX/Hooks.java
@@ -2,6 +2,8 @@ package mindustryX;
 
 import arc.*;
 import arc.util.*;
+import mindustry.*;
+import mindustryX.features.*;
 
 import java.net.*;
 
@@ -9,6 +11,9 @@ public class Hooks implements ApplicationListener{
     @Override
     public void init(){
         Log.infoTag("MindustryX", "Hooks.init");
+        if(!Vars.headless){
+            RenderExt.init();
+        }
     }
 
     @SuppressWarnings("unused")//call before arc.util.Http$HttpRequest.block
diff --git a/core/src/mindustryX/features/RenderExt.java b/core/src/mindustryX/features/RenderExt.java
new file mode 100644
index 0000000000000000000000000000000000000000..835b5d7b801f03683cbb7502ea98025ff2c24d40
--- /dev/null
+++ b/core/src/mindustryX/features/RenderExt.java
@@ -0,0 +1,27 @@
+package mindustryX.features;
+
+import arc.*;
+import arc.util.*;
+import mindustry.game.EventType.*;
+import mindustry.gen.*;
+import mindustry.world.*;
+
+public class RenderExt{
+    public static void init(){
+        Events.run(Trigger.preDraw, () -> {
+        });
+        Events.run(Trigger.draw, RenderExt::draw);
+    }
+
+    private static void draw(){
+
+    }
+
+    public static void onGroupDraw(Drawc t){
+        t.draw();
+    }
+
+    public static void onBlockDraw(Tile tile, Block block, @Nullable Building build){
+        block.drawBase(tile);
+    }
+}

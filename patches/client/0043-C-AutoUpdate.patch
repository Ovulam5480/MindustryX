From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Tue, 26 Mar 2024 22:36:18 +0800
Subject: [PATCH] C: AutoUpdate

---
 core/src/mindustry/net/BeControl.java         |  10 +-
 .../mindustry/ui/fragments/MenuFragment.java  |  21 +--
 core/src/mindustryX/Hooks.java                |   2 +
 core/src/mindustryX/features/AutoUpdate.kt    | 163 ++++++++++++++++++
 4 files changed, 175 insertions(+), 21 deletions(-)
 create mode 100644 core/src/mindustryX/features/AutoUpdate.kt

diff --git a/core/src/mindustry/net/BeControl.java b/core/src/mindustry/net/BeControl.java
index 668e687d7c8e9e8e9ae4b5dc31b3e49e41f40b40..77161ce4333e0e6e3f9ef06e43d0270a062c5a7d 100644
--- a/core/src/mindustry/net/BeControl.java
+++ b/core/src/mindustry/net/BeControl.java
@@ -35,19 +35,11 @@ public class BeControl{
     }
 
     public BeControl(){
-        if(active()){
-            Timer.schedule(() -> {
-                if((Vars.clientLoaded || headless) && checkUpdates && !mobile){
-                    checkUpdate(t -> {});
-                }
-            }, updateInterval, updateInterval);
-        }
-
         if(OS.hasProp("becopy")){
             try{
                 Fi dest = Fi.get(OS.prop("becopy"));
                 Fi self = Fi.get(BeControl.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());
-                
+
                 for(Fi file : self.parent().findAll(f -> !f.equals(self))) file.delete();
 
                 self.copyTo(dest);
diff --git a/core/src/mindustry/ui/fragments/MenuFragment.java b/core/src/mindustry/ui/fragments/MenuFragment.java
index 593d8e2bfbb8c1e156b998dc44d3554317e171bf..25d953a861fbcddea24225be733445e953e717ef 100644
--- a/core/src/mindustry/ui/fragments/MenuFragment.java
+++ b/core/src/mindustry/ui/fragments/MenuFragment.java
@@ -19,6 +19,7 @@ import mindustry.game.EventType.*;
 import mindustry.gen.*;
 import mindustry.graphics.*;
 import mindustry.ui.*;
+import mindustryX.features.*;
 import mindustryX.features.ui.*;
 
 import static mindustry.Vars.*;
@@ -63,9 +64,9 @@ public class MenuFragment{
             }).grow();
         });
 
-        parent.fill(c -> c.bottom().right().button(Icon.discord, new ImageButtonStyle(){{
-            up = discordBanner;
-        }}, ui.discord::show).marginTop(9f).marginLeft(10f).tooltip("@discord").size(84, 45).name("discord"));
+//        parent.fill(c -> c.bottom().right().button(Icon.discord, new ImageButtonStyle(){{
+//            up = discordBanner;
+//        }}, ui.discord::show).marginTop(9f).marginLeft(10f).tooltip("@discord").size(84, 45).name("discord"));
 
         //info icon
         if(mobile){
@@ -80,17 +81,13 @@ public class MenuFragment{
                     Tex.paneTop.draw(0, 0, Core.graphics.getWidth(), Core.scene.marginBottom);
                 }
             });
-        }else if(becontrol.active()){
+        }
+
+        if(AutoUpdate.INSTANCE.getActive()){
             parent.fill(c -> c.bottom().right().button("@be.check", Icon.refresh, () -> {
-                ui.loadfrag.show();
-                becontrol.checkUpdate(result -> {
-                    ui.loadfrag.hide();
-                    if(!result){
-                        ui.showInfo("@be.noupdates");
-                    }
-                });
+                AutoUpdate.INSTANCE.showDialog();
             }).size(200, 60).name("becheck").update(t -> {
-                t.getLabel().setColor(becontrol.isUpdateAvailable() ? Tmp.c1.set(Color.white).lerp(Pal.accent, Mathf.absin(5f, 1f)) : Color.white);
+                t.getLabel().setColor(AutoUpdate.INSTANCE.getNewVersion() != null ? Tmp.c1.set(Color.white).lerp(Pal.accent, Mathf.absin(5f, 1f)) : Color.white);
             }));
         }
 
diff --git a/core/src/mindustryX/Hooks.java b/core/src/mindustryX/Hooks.java
index a1f9e743989ef91d28eb1dc17dc607e1656aa1b0..390913c56aa6088fa3092826cdc772073883113d 100644
--- a/core/src/mindustryX/Hooks.java
+++ b/core/src/mindustryX/Hooks.java
@@ -23,6 +23,8 @@ public class Hooks implements ApplicationListener{
     @Override
     public void init(){
         Log.infoTag("MindustryX", "Hooks.init");
+        if(AutoUpdate.INSTANCE.getActive())
+            AutoUpdate.INSTANCE.checkUpdate();
         if(!Vars.headless){
             RenderExt.init();
             TimeControl.init();
diff --git a/core/src/mindustryX/features/AutoUpdate.kt b/core/src/mindustryX/features/AutoUpdate.kt
new file mode 100644
index 0000000000000000000000000000000000000000..0331762febcf94c7a4a9164609b22aade0a0a29b
--- /dev/null
+++ b/core/src/mindustryX/features/AutoUpdate.kt
@@ -0,0 +1,163 @@
+package mindustryX.features
+
+import arc.Core
+import arc.Events
+import arc.files.Fi
+import arc.util.Align
+import arc.util.Http
+import arc.util.Log
+import arc.util.OS
+import arc.util.io.Streams
+import arc.util.serialization.Jval
+import mindustry.Vars
+import mindustry.core.Version
+import mindustry.game.EventType
+import mindustry.gen.Icon
+import mindustry.graphics.Pal
+import mindustry.net.BeControl
+import mindustry.ui.Bar
+import mindustry.ui.dialogs.BaseDialog
+import mindustryX.VarsX
+import mindustryX.features.ui.Format
+import kotlin.system.exitProcess
+
+object AutoUpdate {
+    data class Release(val tag: String, val version: String, val json: Jval) {
+        data class Asset(val name: String, val url: String)
+
+        fun findAsset(): Asset? {
+            val assets = json.get("assets").asArray().asIterable()
+                .map { Asset(it.getString("name"), it.getString("browser_download_url", "")) }
+                .sortedByDescending { it.name }
+            return assets.firstOrNull {
+                when {
+                    VarsX.isLoader -> it.name.endsWith("loader.dex.jar")
+                    OS.isAndroid -> it.name.endsWith(".apk")
+                    else -> it.name.endsWith("Desktop.jar")
+                }
+            }
+        }
+    }
+
+    val active get() = !Version.mdtXBuild.endsWith("-dev")
+
+    val repo = "TinyLake/MindustryX-work"
+    var versions = emptyList<Release>()
+    val currentBranch get() = Version.mdtXBuild.split('-', limit = 2).getOrNull(1)
+    var newVersion: Release? = null
+
+    fun checkUpdate() {
+        if (versions.isNotEmpty()) return
+        Http.get("https://api.github.com/repos/$repo/releases")
+            .timeout(10000)
+            .error { Log.warn("Fetch releases fail: $it") }
+            .submit { res ->
+                val json = Jval.read(res.resultAsString)
+                versions = json.asArray().map {
+                    Release(it.getString("tag_name"), it.getString("name"), it)
+                }.toList()
+                Core.app.post(::fetchSuccess)
+            }
+    }
+
+    private fun fetchSuccess() {
+        val new = versions.find { it.tag == "$currentBranch-build" && it.version > Version.mdtXBuild } ?: return
+        newVersion = new
+        if (Core.settings.getBool("showUpdateDialog", true)) {
+            if (Vars.clientLoaded) return showDialog()
+            Events.on(EventType.ClientLoadEvent::class.java) {
+                Vars.ui.showConfirm("检测到新版MindustryX!\n打开更新列表?", ::showDialog)
+            }
+        }
+    }
+
+    @JvmOverloads
+    fun showDialog(version: Release? = newVersion) {
+        checkUpdate()
+        val dialog = BaseDialog("自动更新")
+        dialog.cont.apply {
+            add("当前版本号: ${Version.mdtXBuild}").labelAlign(Align.center).width(500f).row()
+            if (versions.isEmpty()) {
+                add("检查更新失败，请稍后再试").row()
+                return@apply
+            }
+            versions.forEach {
+                check(it.version, version == it) { _ ->
+                    dialog.hide()
+                    showDialog(it)
+                }.left().row()
+            }
+            if (version == null) {
+                add("你已是最新版本，不需要更新！")
+                return@apply
+            }
+
+            val asset = version.findAsset()
+            var url = asset?.url.orEmpty()
+            field(url) { url = it }.fillX()
+            button("♐") {
+                if (!Core.app.openURI(url)) {
+                    Vars.ui.showErrorMessage("打开失败，网址已复制到粘贴板\n请自行在浏览器打开")
+                    Core.app.clipboardText = url
+                }
+            }.width(50f)
+
+            row().button("自动下载更新") {
+                if (asset == null) return@button
+                if (!VarsX.isLoader && OS.isAndroid) {
+                    Vars.ui.showErrorMessage("目前不支持Apk自动安卓，请在浏览器打开后手动安装")
+                    return@button
+                }
+                startDownload(asset.copy(url = url))
+            }.fillX()
+        }
+        dialog.addCloseButton()
+        dialog.show()
+    }
+
+    private fun startDownload(asset: Release.Asset) {
+        val file = Vars.bebuildDirectory.child(asset.name)
+
+        var progress = 0f
+        var length = 0f
+        var canceled = false
+        val dialog = BaseDialog("@be.updating").apply {
+            cont.add(Bar({
+                if (length == 0f) return@Bar Core.bundle["be.updating"]
+                with(Format(fixDecimals = true)) { "${format(progress * length)}/${format(length)}MB" }
+            }, { Pal.accent }, { progress })).width(400f).height(70f)
+            buttons.button("@cancel", Icon.cancel) {
+                canceled = true
+                hide()
+            }.size(210f, 64f)
+            setFillParent(false)
+            show()
+        }
+        Http.get(asset.url, { res ->
+            length = res.contentLength.toFloat() / 1024 / 1024
+            file.write(false, 4096).use { out ->
+                Streams.copyProgress(res.resultAsStream, out, res.contentLength, 4096) { progress = it }
+            }
+            if (canceled) return@get
+            endDownload(file)
+        }) {
+            dialog.hide()
+            Vars.ui.showException(it)
+        }
+    }
+
+    private fun endDownload(file: Fi) {
+        if (VarsX.isLoader) {
+            Vars.mods.importMod(file)
+            file.delete()
+            Vars.ui.mods.show()
+            return
+        }
+        val fileDest = if (OS.hasProp("becopy")) Fi.get(OS.prop("becopy"))
+        else Fi.get(BeControl::class.java.protectionDomain.codeSource.location.toURI().path)
+        val args = if (OS.isMac) arrayOf<String>(Vars.javaPath, "-XstartOnFirstThread", "-DlastBuild=" + Version.build, "-Dberestart", "-Dbecopy=" + fileDest.absolutePath(), "-jar", file.absolutePath())
+        else arrayOf<String>(Vars.javaPath, "-DlastBuild=" + Version.build, "-Dberestart", "-Dbecopy=" + fileDest.absolutePath(), "-jar", file.absolutePath())
+        Runtime.getRuntime().exec(args)
+        Core.app.exit()
+    }
+}
\ No newline at end of file
